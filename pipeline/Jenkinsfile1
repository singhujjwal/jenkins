pipeline {
    agent any
    //agent none in case if you want to define the agent at stage level
    environment { 
        CC = 'clang'
    }
    options {
        timeout(time: 1, unit: 'HOURS') 
    }
    parameters {
        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

        text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

        booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

        choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')

        password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
    }
    
    /*
    The "tools" directive can be added either at a pipeline level or at the stage level. 
    It allows you to specify which maven, jdk, or gradle version to use on your script. 
    Any of these tools, the three supported at the time of writing, must be configured 
    on the "Global tool configuration" Jenkins menu.

    Also, Jenkins will attempt to install the listed tool (if it is not installed yet). 
    By using this directive you can make sure a specific version required for your
     project is installed.

    //TODO:
    
    tools {
        maven 'apache-maven-3.0.1'
    }

    */

    stages {
        stage('Example Build') {

            options {
                timeout(time: 1, unit: 'HOURS') 
            }

            // Can have a docker agent at stage level as well
            // agent { docker 'maven:3.8.1-adoptopenjdk-11' }
            steps {
                echo 'Hello, Maven'
            }
        }
        stage('Example Test') {
            steps {
                echo 'Hello, JDK, if there are any.'
            }
        }
        stage('Ujjwal') {
            environment {
                //Setup an environment variable 
                A_KEY = credentials('ujjwal-github-git-https-creds')
            }
            steps {
                echo 'Hello world step 1'
                echo "Using double quotes...."
                echo "${A_KEY_PSW}"
                echo "Trying to print password as part of sh command of echo"
                sh 'echo "${A_KEY_PSW}"'
                echo "Using single quotes wont do the groovy string interpolation...."
                echo '$A_KEY_PSW'

                script {
                                def terraformDir = 'central-tools-eks-cluster'
                                echo '${terraformDir}'
                        }
            }
        }
        stage('parameter') {
            steps {
                echo "Hello ${params.PERSON}"

                echo "Biography: ${params.BIOGRAPHY}"

                echo "Toggle: ${params.TOGGLE}"

                echo "Choice: ${params.CHOICE}"

                echo "Password: ${params.PASSWORD}"
            }
        }
         stage('Input Example') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
                submitter "alice,bob"
                parameters {
                    string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                }
            }
            steps {
                echo "Hello, ${PERSON}, nice to meet you."
            }
        }
    }
    post {
        always {
            echo 'I will always echo this !!!'
        }
    }
}
